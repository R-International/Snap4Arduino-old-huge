[31mGot startup errors: 
[0m[31m    Error: Unable to open file File @ C:\Documents and Settings\Formacio\Mis documentos\GitHub\Snap4Arduino\pharo\shared\Pharo2.0.changes
[0m[31mPrimitiveFailed: primitive #primSize: in MultiByteFileStream failed
[0mMultiByteFileStream(Object)>>primitiveFailed:
MultiByteFileStream(Object)>>primitiveFailed
MultiByteFileStream(StandardFileStream)>>primSize:
MultiByteFileStream(StandardFileStream)>>size
MultiByteFileStream(StandardFileStream)>>setToEnd
ChangesLog>>assureStartupStampLogged
SmalltalkImage>>assureStartupStampLogged
CompiledMethod>>putSource:fromParseNode:inFile:withPreamble:
CompiledMethod>>putSource:fromParseNode:class:category:withStamp:inFile:priorMethod:
S4ACommandHandler class(ClassDescription)>>logMethodSource:forMethodWithNode:inCategory:withStamp:notifying:
S4ACommandHandler class(ClassDescription)>>compile:classified:withStamp:notifying:logSource:
S4ACommandHandler class(ClassDescription)>>compile:classified:withStamp:notifying:
S4ACommandHandler class(ClassDescription)>>compile:classified:notifying:
NautilusUI(AbstractTool)>>compileANewMethodInClass:categorized:from:notifyng:
NautilusUI>>compileAMethodFromCategory:withSource:notifying:
NautilusUI>>compileSource:notifying:
PluggableTextMorphWithLimits(PluggableTextMorph)>>acceptTextInModel in Block: [^ setTextSelector isNil...
BlockClosure>>ensure:
PluggableTextMorphWithLimits(PluggableTextMorph)>>acceptTextInModel
PluggableTextMorphWithLimits(PluggableTextMorph)>>acceptBasic
PluggableTextMorphWithLimits>>acceptBasic
PluggableTextMorphWithLimits(PluggableTextMorph)>>accept
TextMorphForEditView>>acceptContents
TextMorph class>>buildTextEditorKeymapsOn: in Block: [:t2 | t2 acceptContents]
BlockClosure>>cull:
BlockClosure>>cull:cull:
BlockClosure>>cull:cull:cull:
KMCategoryTarget>>completeMatch:buffer:
KMKeymap>>notifyCompleteMatchTo:buffer: in Block: [:t4 | t4 completeMatch: self buffer: t2]
Array(SequenceableCollection)>>do:
[0m[31mPrimitiveFailed: primitive #primSize: in MultiByteFileStream failed
[0mMultiByteFileStream(Object)>>primitiveFailed:
MultiByteFileStream(Object)>>primitiveFailed
MultiByteFileStream(StandardFileStream)>>primSize:
MultiByteFileStream(StandardFileStream)>>size
MultiByteFileStream(StandardFileStream)>>setToEnd
ChangesLog>>assureStartupStampLogged
SmalltalkImage>>assureStartupStampLogged
CompiledMethod>>putSource:fromParseNode:inFile:withPreamble:
CompiledMethod>>putSource:fromParseNode:class:category:withStamp:inFile:priorMethod:
S4ACommandHandler class(ClassDescription)>>logMethodSource:forMethodWithNode:inCategory:withStamp:notifying:
S4ACommandHandler class(ClassDescription)>>compile:classified:withStamp:notifying:logSource:
S4ACommandHandler class(ClassDescription)>>compile:classified:withStamp:notifying:
S4ACommandHandler class(ClassDescription)>>compile:classified:notifying:
NautilusUI(AbstractTool)>>compileANewMethodInClass:categorized:from:notifyng:
NautilusUI>>compileAMethodFromCategory:withSource:notifying:
NautilusUI>>compileSource:notifying:
PluggableTextMorphWithLimits(PluggableTextMorph)>>acceptTextInModel in Block: [^ setTextSelector isNil...
BlockClosure>>ensure:
PluggableTextMorphWithLimits(PluggableTextMorph)>>acceptTextInModel
PluggableTextMorphWithLimits(PluggableTextMorph)>>acceptBasic
PluggableTextMorphWithLimits>>acceptBasic
PluggableTextMorphWithLimits(PluggableTextMorph)>>accept
TextMorphForEditView>>acceptContents
TextMorph class>>buildTextEditorKeymapsOn: in Block: [:t2 | t2 acceptContents]
BlockClosure>>cull:
BlockClosure>>cull:cull:
BlockClosure>>cull:cull:cull:
KMCategoryTarget>>completeMatch:buffer:
KMKeymap>>notifyCompleteMatchTo:buffer: in Block: [:t4 | t4 completeMatch: self buffer: t2]
Array(SequenceableCollection)>>do:
[0m