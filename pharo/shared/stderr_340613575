[31mGot startup errors: 
[0m[31m    Error: Unable to open file File @ C:\Documents and Settings\Formacio\Mis documentos\GitHub\Snap4Arduino\pharo\shared\Pharo2.0.changes
[0m[31mError: Unable to open file File @ C:\Documents and Settings\Formacio\Mis documentos\GitHub\Snap4Arduino\pharo\shared\Pharo2.0.changes
[0mFileHandle(Object)>>error:
FileHandle>>streamError
FileHandle>>writeStream
FileSystem>>writeStreamOn:
FileReference>>writeStream
SmalltalkImage>>openChanges:forImage:
SmalltalkImage>>checkAndOpenSourcesAndChanges
SmalltalkImage>>openSourceFiles
SmalltalkImage class>>startUp:
SmalltalkImage>>send:toClassesNamedIn:with: in Block: [t7 perform: t1 with: t3]
BlockClosure>>on:do:
SmalltalkImage>>logStartUpErrorDuring:into:tryDebugger:
SmalltalkImage>>send:toClassesNamedIn:with: in Block: [:t6 | ...
OrderedCollection>>do:
SmalltalkImage>>send:toClassesNamedIn:with:
SmalltalkImage>>processStartUpList:
SmalltalkImage>>startupImage:snapshotWorked: in Block: [t3...
BlockClosure>>ensure:
MorphicUIManager(UIManager)>>boot:during:
SmalltalkImage>>startupImage:snapshotWorked:
SmalltalkImage>>snapshot:andQuit:
WorldState class>>saveAndQuit in Block: [Smalltalk snapshot: true andQuit: true]
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
WorldState class>>saveAndQuit
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent: in Block: [| t3 |...
BlockClosure>>ensure:
CursorWithMask(Cursor)>>showWhile:
ToggleMenuItemMorph(MenuItemMorph)>>invokeWithEvent:
ToggleMenuItemMorph(MenuItemMorph)>>mouseUp:
[0m[31mError: Could not find accessor for variable named "aModuleName" in NativeBoost>>#bootstrapLoadModule:ofLength:into:
[0mNBFFICallout>>loaderForArgNamed:
NBFFICallout>>loaderForArgNamed:indirectIndex:
NBFFICallout>>argName:indirectIndex:type:ptrArity:
NBFnSpecParser>>parseArgument
NBFnSpecParser>>parseArguments
NBFnSpecParser>>parseAnonFunction:
NBFFICallout>>anonSpec:
NBFFICalloutAPI>>function:emit: in Block: [:t3 | t3 useEmitCall; callType: conv; sender: con...etc...
NBFFICallout class(NBNativeCodeGen class)>>generateCode:andRetry: in Block: [t6 := t1...
BlockClosure>>on:do:
NBRecursionDetect class>>in:during:
NBFFICallout class(NBNativeCodeGen class)>>generateCode:andRetry:
NBFFICallout class(NBNativeCodeGen class)>>handleFailureIn:nativeCode:
NBFFICalloutAPI>>function:emit:
NativeBoostWin32(NativeBoost)>>bootstrapLoadModule:ofLength:into:
NativeBoostWin32(NativeBoost)>>loadSymbol:fromModule:
NativeBoost class>>loadSymbol:fromModule:
NativeBoostWin32 class(Object)>>nbGetSymbolAddress:module:
NBFFICallout>>generateCall:module:
NBFFICalloutAPI>>function:module: in Block: [:t3 | t3 callType: conv;...
NBFFICallout class(NBNativeCodeGen class)>>generateCode:andRetry: in Block: [t6 := t1...
BlockClosure>>on:do:
NBRecursionDetect class>>in:during:
NBFFICallout class(NBNativeCodeGen class)>>generateCode:andRetry:
NBFFICallout class(NBNativeCodeGen class)>>handleFailureIn:nativeCode:
NBFFICalloutAPI>>function:module:
NativeBoostWin32>>privCreateHeap:
NativeBoostWin32>>initializeExternalHeap
NativeBoostWin32(NativeBoost)>>initialize
NativeBoostWin32 class(Behavior)>>new
[0m